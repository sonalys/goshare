version: '3'

env:
  CWD: "{{ .USER_WORKING_DIR }}"
  DOCKERFILE: ./dockerfile
  COMPOSE_FILE: .config/deployment/local/compose.yml
  GO_VERSION: 1.24
  VERSION: 0.1.0

tasks:
  build-server:
    cmd: go build -ldflags "-extldflags '-static' -X main.version=$VERSION" -o ./bin/server ./cmd/server
    generates:
      - bin/server

  build-migration:
    cmd: go build -gcflags "all=-N -l" -a -ldflags "-extldflags '-static' -X main.version=$VERSION" -o ./bin/migration ./cmd/migration
    generates:
      - bin/migration

  build:
    deps: [build-server,build-migration]

  dev:
    cmd: go run ./cmd/server/...

  migrate:
    cmd: go run ./cmd/migration/...

  generate-sql:
    cmd: go tool sqlc -f .config/.sqlc.yaml generate

  generate-openapi:
    cmd: go tool ogen -package handlers --target cmd/server/handlers --clean cmd/server/spec/root.yaml
    # sources:
    #   - cmd/server/spec/root.yaml

  compose-server:
    cmd: docker compose -f {{ .COMPOSE_FILE }} up -d --build goshare && docker compose -f {{ .COMPOSE_FILE }} logs -f goshare_migrate goshare

  compose-down-server:
    cmd: docker compose -f {{ .COMPOSE_FILE }} down goshare

  compose:
    cmd: docker compose -f {{ .COMPOSE_FILE }} up -d --build && docker compose -f {{ .COMPOSE_FILE }} logs -f goshare_migrate goshare

  compose-down:
    cmd: docker compose -f {{ .COMPOSE_FILE }} down

  compose-db:
    cmd: docker compose -f {{ .COMPOSE_FILE }} up -d postgres

  enter-db:
    cmd: docker exec -it postgres psql -U user goshare

  debug-server:
    cmd: dlv debug /app/cmd/server --headless --listen=:2345 --api-version=2 --accept-multiclient
    sources:
      - ./*.go
    generates:
      - bin/server